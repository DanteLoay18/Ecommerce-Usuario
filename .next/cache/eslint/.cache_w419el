[{"C:\\Universidad\\ecommerce-admin-master\\pages\\api\\auth\\[...nextauth].js":"1","C:\\Universidad\\ecommerce-admin-master\\pages\\api\\categories.js":"2","C:\\Universidad\\ecommerce-admin-master\\pages\\api\\hello.js":"3","C:\\Universidad\\ecommerce-admin-master\\pages\\api\\orders.js":"4","C:\\Universidad\\ecommerce-admin-master\\pages\\api\\products.js":"5","C:\\Universidad\\ecommerce-admin-master\\pages\\api\\upload.js":"6","C:\\Universidad\\ecommerce-admin-master\\pages\\categorias.js":"7","C:\\Universidad\\ecommerce-admin-master\\pages\\index.js":"8","C:\\Universidad\\ecommerce-admin-master\\pages\\ordenes.js":"9","C:\\Universidad\\ecommerce-admin-master\\pages\\productos\\delete\\[...id].js":"10","C:\\Universidad\\ecommerce-admin-master\\pages\\productos\\edit\\[...id].js":"11","C:\\Universidad\\ecommerce-admin-master\\pages\\productos\\new.js":"12","C:\\Universidad\\ecommerce-admin-master\\pages\\productos.js":"13","C:\\Universidad\\ecommerce-admin-master\\pages\\_app.js":"14","C:\\Universidad\\ecommerce-admin-master\\pages\\_document.js":"15","C:\\Universidad\\ecommerce-admin-master\\components\\Layout.js":"16","C:\\Universidad\\ecommerce-admin-master\\components\\Logo.js":"17","C:\\Universidad\\ecommerce-admin-master\\components\\Nav.js":"18","C:\\Universidad\\ecommerce-admin-master\\components\\ProductForm.js":"19","C:\\Universidad\\ecommerce-admin-master\\components\\Spinner.js":"20","C:\\Universidad\\ecommerce-admin-master\\lib\\mongodb.js":"21","C:\\Universidad\\ecommerce-admin-master\\lib\\mongoose.js":"22"},{"size":964,"mtime":1690585862674,"results":"23","hashOfConfig":"24"},{"size":1052,"mtime":1681405722000,"results":"25","hashOfConfig":"24"},{"size":170,"mtime":1681405722000,"results":"26","hashOfConfig":"24"},{"size":217,"mtime":1681405722000,"results":"27","hashOfConfig":"24"},{"size":1130,"mtime":1689425001343,"results":"28","hashOfConfig":"24"},{"size":1427,"mtime":1689336214429,"results":"29","hashOfConfig":"24"},{"size":6292,"mtime":1689424111203,"results":"30","hashOfConfig":"24"},{"size":574,"mtime":1681405722000,"results":"31","hashOfConfig":"24"},{"size":1378,"mtime":1689344331942,"results":"32","hashOfConfig":"24"},{"size":1056,"mtime":1689357306267,"results":"33","hashOfConfig":"24"},{"size":714,"mtime":1689424864670,"results":"34","hashOfConfig":"24"},{"size":229,"mtime":1689424266516,"results":"35","hashOfConfig":"24"},{"size":2307,"mtime":1689366773733,"results":"36","hashOfConfig":"24"},{"size":278,"mtime":1681405722000,"results":"37","hashOfConfig":"24"},{"size":231,"mtime":1681405722000,"results":"38","hashOfConfig":"24"},{"size":1470,"mtime":1681405722000,"results":"39","hashOfConfig":"24"},{"size":933,"mtime":1689344357052,"results":"40","hashOfConfig":"24"},{"size":5331,"mtime":1689357513908,"results":"41","hashOfConfig":"24"},{"size":8566,"mtime":1689883547330,"results":"42","hashOfConfig":"24"},{"size":158,"mtime":1681405722000,"results":"43","hashOfConfig":"24"},{"size":1015,"mtime":1681405722000,"results":"44","hashOfConfig":"24"},{"size":251,"mtime":1681405722000,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12rm9jj",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Universidad\\ecommerce-admin-master\\pages\\api\\auth\\[...nextauth].js",[],[],"C:\\Universidad\\ecommerce-admin-master\\pages\\api\\categories.js",[],[],"C:\\Universidad\\ecommerce-admin-master\\pages\\api\\hello.js",[],[],"C:\\Universidad\\ecommerce-admin-master\\pages\\api\\orders.js",[],[],"C:\\Universidad\\ecommerce-admin-master\\pages\\api\\products.js",[],[],"C:\\Universidad\\ecommerce-admin-master\\pages\\api\\upload.js",[],[],"C:\\Universidad\\ecommerce-admin-master\\pages\\categorias.js",[],[],"C:\\Universidad\\ecommerce-admin-master\\pages\\index.js",["114"],[],"import Layout from \"@/components/Layout\";\nimport {useSession} from \"next-auth/react\";\n\nexport default function Home() {\n  const {data: session} = useSession();\n  return <Layout>\n    <div className=\"text-blue-900 flex justify-between\">\n      <h2>\n        Hello, <b>{session?.user?.name}</b>\n      </h2>\n      <div className=\"flex bg-gray-300 gap-1 text-black rounded-lg overflow-hidden\">\n        <img src={session?.user?.image} alt=\"\" className=\"w-6 h-6\"/>\n        <span className=\"px-2\">\n          {session?.user?.name}\n        </span>\n      </div>\n    </div>\n  </Layout>\n}\n","C:\\Universidad\\ecommerce-admin-master\\pages\\ordenes.js",[],[],"C:\\Universidad\\ecommerce-admin-master\\pages\\productos\\delete\\[...id].js",[],[],"C:\\Universidad\\ecommerce-admin-master\\pages\\productos\\edit\\[...id].js",[],[],"C:\\Universidad\\ecommerce-admin-master\\pages\\productos\\new.js",[],[],"C:\\Universidad\\ecommerce-admin-master\\pages\\productos.js",[],[],"C:\\Universidad\\ecommerce-admin-master\\pages\\_app.js",[],[],"C:\\Universidad\\ecommerce-admin-master\\pages\\_document.js",[],[],"C:\\Universidad\\ecommerce-admin-master\\components\\Layout.js",[],[],"C:\\Universidad\\ecommerce-admin-master\\components\\Logo.js",[],[],"C:\\Universidad\\ecommerce-admin-master\\components\\Nav.js",[],[],"C:\\Universidad\\ecommerce-admin-master\\components\\ProductForm.js",["115"],[],"import {useEffect, useState} from \"react\";\nimport {useRouter} from \"next/router\";\nimport axios from \"axios\";\nimport Spinner from \"@/components/Spinner\";\nimport {ReactSortable} from \"react-sortablejs\";\n\nexport default function ProductForm({\n  _id,\n  title:existingTitle,\n  description:existingDescription,\n  price:existingPrice,\n  images:existingImages,\n  category:assignedCategory,\n  properties:assignedProperties,\n  stock:assignedStock,\n  categories:assignedCategories,\n  offer:assignedOffer\n}) {\n  const [title,setTitle] = useState(existingTitle || '');\n  const [description,setDescription] = useState(existingDescription || '');\n  const [category,setCategory] = useState(assignedCategory || '');\n  const [productProperties,setProductProperties] = useState(assignedProperties || {});\n  const [price,setPrice] = useState(existingPrice || '');\n  const [images,setImages] = useState(existingImages || []);\n  const [goToProducts,setGoToProducts] = useState(false);\n  const [isUploading,setIsUploading] = useState(false);\n  const [categories,setCategories] = useState(assignedCategories || []);\n  const [stock, setStock] = useState(assignedStock || '');\n  const [offer, setOffer] = useState(assignedOffer || []);\n  const [percentage, setPercentage] = useState(0);\n  const [startDate, setStartDate] = useState(new Date())\n  const [endDate, setEndDate] = useState(new Date())\n  const router = useRouter();\n  useEffect(() => {\n    axios.get('/api/categories').then(result => {\n      setCategories(result.data);\n    })\n  }, []);\n  async function saveProduct(ev) {\n    ev.preventDefault();\n    const data = {\n      title,description,price,images,category,\n      properties:productProperties,stock, offer\n    };\n    if (_id) {\n      //update\n      await axios.put('/api/products', {...data,_id});\n    } else {\n      //create\n      await axios.post('/api/products', data);\n    }\n    setGoToProducts(true);\n  }\n  if (goToProducts) {\n    router.push('/productos');\n  }\n  async function uploadImages(ev) {\n    const files = ev.target?.files;\n    if (files?.length > 0) {\n      setIsUploading(true);\n      const data = new FormData();\n      for (const file of files) {\n        data.append('file', file);\n      }\n      const res = await axios.post('/api/upload', data);\n      setImages(oldImages => {\n        return [...oldImages, ...res.data.links];\n      });\n      setIsUploading(false);\n    }\n  }\n  function updateImagesOrder(images) {\n    setImages(images);\n  }\n  function setProductProp(propName,value) {\n    setProductProperties(prev => {\n      const newProductProps = {...prev};\n      newProductProps[propName] = value;\n      return newProductProps;\n    });\n  }\n  function addOffer(){\n    setOffer( prev => {\n      return [...prev, {startDate:new Date(), endDate:new Date(), percentage:0}]\n    })\n  }\n  function handleOfferStartDateChange(index,property,newStartDate){\n    setOffer(prev => {\n      const offers = [...prev];\n      offers[index].startDate = newStartDate;\n      return offers;\n    });\n  }\n  function handleOfferEndDateChange(index, property, newEndDate){\n    setOffer(prev => {\n      const offers = [...prev];\n      offers[index].endDate = newEndDate;\n      return offers;\n    });\n  }\n  function handleOfferPercentageChange(index, property, newPercentage){\n    setOffer(prev => {\n      const offers = [...prev];\n      offers[index].percentage = newPercentage;\n      return offers;\n    });\n  }\n  const propertiesToFill = [];\n  if (categories.length > 0 && category) {\n    let catInfo = categories.find(({_id}) => _id === category);\n    propertiesToFill.push(...catInfo.properties);\n    while(catInfo?.parent?._id) {\n      const parentCat = categories.find(({_id}) => _id === catInfo?.parent?._id);\n      propertiesToFill.push(...parentCat.properties);\n      catInfo = parentCat;\n    }\n  }\n\n  return (\n      <form onSubmit={saveProduct}>\n        <label>Nombre del producto</label>\n        <input\n          type=\"text\"\n          placeholder=\"nombre del producto\"\n          value={title}\n          onChange={ev => setTitle(ev.target.value)}/>\n        <label>Categoria</label>\n        <select value={category}\n                onChange={ev => setCategory(ev.target.value)}>\n          <option value=\"\">Sin categoria</option>\n          {categories.length > 0 && categories.map(c => (\n            <option key={c._id} value={c._id}>{c.name}</option>\n          ))}\n        </select>\n        {propertiesToFill.length > 0 && propertiesToFill.map(p => (\n          <div key={p.name} className=\"\">\n            <label>{p.name[0].toUpperCase()+p.name.substring(1)}</label>\n            <div>\n              <select value={productProperties[p.name]}\n                      onChange={ev =>\n                        setProductProp(p.name,ev.target.value)\n                      }\n              >\n                {p.values.map(v => (\n                  <option key={v} value={v}>{v}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n        ))}\n        <label>\n          Photos\n        </label>\n        <div className=\"mb-2 flex flex-wrap gap-1\">\n          <ReactSortable\n            list={images}\n            className=\"flex flex-wrap gap-1\"\n            setList={updateImagesOrder}>\n            {!!images?.length && images.map(link => (\n              <div key={link} className=\"h-24 bg-white p-4 shadow-sm rounded-sm border border-gray-200\">\n                <img src={link} alt=\"\" className=\"rounded-lg\"/>\n              </div>\n            ))}\n          </ReactSortable>\n          {isUploading && (\n            <div className=\"h-24 flex items-center\">\n              <Spinner />\n            </div>\n          )}\n          <label className=\"w-24 h-24 cursor-pointer text-center flex flex-col items-center justify-center text-sm gap-1 text-primary rounded-sm bg-white shadow-sm border border-primary\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5m-13.5-9L12 3m0 0l4.5 4.5M12 3v13.5\" />\n            </svg>\n            <div>\n              Agregar imagen\n            </div>\n            <input type=\"file\" onChange={uploadImages} className=\"hidden\"/>\n          </label>\n        </div>\n        <label>Stock</label>\n        <input\n          type=\"text\"\n          placeholder=\"Stock del producto\"\n          value={stock}\n          onChange={ev => setStock(ev.target.value)}/>\n        <label>Descripcion</label>\n\n        <textarea\n          placeholder=\"descripcion\"\n          value={description}\n          onChange={ev => setDescription(ev.target.value)}\n        />\n        <label>Precio (en Soles)</label>\n        <input\n          type=\"number\" placeholder=\"precio\"\n          value={price}\n          onChange={ev => setPrice(ev.target.value)}\n        />\n        <div className=\"mb-2\">\n          <label>Oferta</label>\n          <button\n              onClick={addOffer}\n              type=\"button\"\n              className=\"btn-default text-sm mb-2\">\n              Agregar Nueva Oferta\n            </button>\n            {offer.length>0 && offer.map((offer,index) =>(\n              \n                <div key={index}>\n                        <h2>Oferta {index +1 }</h2>\n                        <label>Fecha inicio</label>\n                        <input type=\"datetime-local\"\n                        value={offer.startDate}\n                        className=\"mb-2\"\n                        onChange={ev => handleOfferStartDateChange(index,offer,ev.target.value)}\n                        placeholder=\"Fecha inicio\"/>\n                        <label>Fecha Fin</label>\n                        <input type=\"datetime-local\"\n                        value={offer.endDate}\n                        className=\"mb-2\"\n                        min={offer.startDate}\n                        onChange={ev => handleOfferEndDateChange(index,offer,ev.target.value)}\n                        placeholder=\"Fecha Fin\"/>\n                        <label>Porcentaje</label>\n                        <input\n                          type=\"number\" placeholder=\"Porcentaje\"\n                          value={offer.percentage}\n                          onChange={ev => handleOfferPercentageChange(index,offer,ev.target.value)}\n                        />\n                </div>\n\n                \n            ))}\n        </div>\n        \n        <button\n          type=\"submit\"\n          className=\"btn-primary\">\n          Save\n        </button>\n      </form>\n  );\n}\n","C:\\Universidad\\ecommerce-admin-master\\components\\Spinner.js",[],[],"C:\\Universidad\\ecommerce-admin-master\\lib\\mongodb.js",[],[],"C:\\Universidad\\ecommerce-admin-master\\lib\\mongoose.js",[],[],{"ruleId":"116","severity":1,"message":"117","line":12,"column":9,"nodeType":"118","endLine":12,"endColumn":69},{"ruleId":"116","severity":1,"message":"117","line":161,"column":17,"nodeType":"118","endLine":161,"endColumn":64},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Use `<Image />` from `next/image` instead to utilize Image Optimization. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement"]